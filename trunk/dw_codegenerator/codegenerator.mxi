<macromedia-extension

	name="PHP/Java Class Generator"

	version="1.0.1"

	type="thirdPartyTags"

	requires-restart="true">

	<!-- List the required/compatible products -->

	
	<products>
		<product name="Dreamweaver" version="6" primary="true" />
	</products> 

	<!-- Describe the author -->
	
	<author name="GraFX Software Solutions" />

	<!-- Describe the extension -->
	
	<description>
	<![CDATA[
	 This tool is designed in such a way to facilitate the creation of java and php classes in javabeans style. It is extremely useful in case you have a Mysql table and you would like to generate a class over this table which would have a constructor, saving (updating) and drop option, and to provide the possibility to enter and query internal variables assigned for each field of the table.<br><br>
	 	The advantage this generator provides is generating a class scheleton which may be altered in the future. 
	 The disadvantage consists in reduced applicability as it is useful in case the first field is set as Primary Key.
	 <br><br>
	 You have to enter the folowing parameters:
Developer name: is the name of the developer  - it will be displayed in the header of the source file 
<br>Project name: is the name of the project - it will be displayed in the header of the source file 
<br>CLASS name: is the name of the class - the name conventions have to be taken into consideration, specific for each language (in java Class, in php class or Class) The name is important when naming a file as the source file will be named 
Class.java (having the same form as the name of the class or cls_class.php in php.
<br>VARIABLE name: the name of the variable is important as a "usage code" is generated, as sample code inserted at the beginning of the source. This may be pasted eventually in the source where this class is applied.
<br>TYPE: the type of the generated source
<br>DB fields: is the list of the table field names. Rules: the first field has to be set as Primary Key, the fields are separates by ; and the ones string types (varchar, string, data) have a # at the beginning.
<br>Functions name: the list has to be similar with the fields one. Rules: it is recommended to be the same as the precedent list but without # and with capitalisation. Thus functions will be generated: getId, setId in case the first field is id in the fields list and Id in this one.
<br>DB Table: the name of the table.
	]]>
	</description>

	<!-- Describe where the extension shows in the UI of the product -->

	<ui-access>
	<![CDATA[
	To access this command :
	 Choose 'PHP/Java Class Generator' from the 'Common' Insert Bar
	]]>
	</ui-access>
	
	<license-agreement>
	<![CDATA[
	
	]]>
	</license-agreement>
	<!-- Describe the files that comprise the extension -->
	
	<files>
		<file source="codegeneratorhelp.htm" destination="$dreamweaver/configuration/objects/codegenerator4dw" />
		<file source="codegenerator.htm" destination="$dreamweaver/configuration/objects/codegenerator4dw" />
		<file source="logo.png" destination="$dreamweaver/configuration/objects/codegenerator4dw" />
		<file source="codegenerator.gif" destination="$dreamweaver/configuration/objects/codegenerator4dw" />
	</files>
	
	<!-- Describe the changes to the configuration -->
	
	<configuration-changes>

	
		<insertbar-changes>
			<insertbar-insert>
				<category folder="Common" id="DW_Insertbar_Common">
					<button file="codegenerator4dw/codegenerator.htm" id="Common_Code_Generator" image="codegenerator4dw/codegenerator.gif" />
				</category>
			</insertbar-insert>
		</insertbar-changes>



	</configuration-changes>
	
	<!-- $Id: codegenerator.mxi 2833 2004-10-20 07:26:08Z paul $ -->
	
</macromedia-extension>