<?php
/*
CODE GENERATED BY: GRAFXSOFTWARE CODE GENERATOR
http://www.grafxsoftware.com
======================================
CLASS MADE BY: Test Developer
DATE: 2009:07:23
PROJECT: Test Product
PHP: version 5.x.x
======================================
*/
/*$ = new TestProduct();
$ -> save();
*/
/**
*
* @author - Test Developer
* @desc -
* @vers - 1.0
*/
class TestProduct
{
	protected $where_clause;
	
	protected $enable_undo = false;
	
	protected $id_key = 'id';
	
	protected $history_table = 'history';
	
	protected $lang;//do not modify
	protected $valid = false;//do not modify
	protected $where_mode = false;//do not modify
	
	protected $id;
	
	protected $name;
	
	protected $descriptionshort;
	
	protected $description;
	
	protected $categoryid;
	
	protected $isthisreal;
	
	protected $termsagree;
	
	protected $fileupload;
	
	protected $active;
	
	/**
* @author   - Test Developer
* @type     - public
* @desc     - Constructor
* @param    - string $id - the ID
* @return   - mixed rewrite array
* @vers     - 1.0
* @Mod  	-
**/
	public function __construct( $id = 0, $lang = 'en' )
	{
		$this -> lang = $lang;
		
		if( ( is_int( $id ) && ( $id == 0 ) ) || ( is_string( $id ) && ( $id == '0' ) ) )
		{
			$this -> valid = true;
			$this -> where_mode = false;
			return;
		}
		
		$this -> id = $id;
		
		if( ( is_string( $this -> id ) ) && ( stristr( $this -> id, 'where' ) ) )
		{
			$this -> where_clause = $this -> id;
			$this -> where_mode = true;
		}
		else
		{
			$this -> where_clause = ' WHERE `id`=\'' . $this -> id . '\'';
			$this -> where_mode = false;
		}
		
		$SQL = ' SELECT `name`,`descriptionshort`,`description`,`categoryid`,`isthisreal`,`termsagree`,`fileupload`,`active` FROM `' . DB_PREFIX . '` ' . $this -> where_clause;
		$retid = mysql_query( $SQL ) or die( mysql_error() );
		
		if( $row = mysql_fetch_array( $retid ) )
		{
			$this -> valid = true;
			$this -> name = $row[ 'name' ];
			$this -> descriptionshort = $row[ 'descriptionshort' ];
			$this -> description = $row[ 'description' ];
			$this -> categoryid = $row[ 'categoryid' ];
			$this -> isthisreal = $row[ 'isthisreal' ];
			$this -> termsagree = $row[ 'termsagree' ];
			$this -> fileupload = $row[ 'fileupload' ];
			$this -> active = $row[ 'active' ];
		}
		else
		{
			$this -> valid = false;
			$this -> name = '';
			$this -> descriptionshort = '';
			$this -> description = '';
			$this -> categoryid = '';
			$this -> isthisreal = '';
			$this -> termsagree = '';
			$this -> fileupload = '';
			$this -> active = '';
		}
	}//end constructor TestProduct
	
	/**
* @author   - Test Developer
* @type     - public
* @desc     - check if the data is valid
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function is_valid()
	{
		return $this -> valid;
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - saves data into database
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function save()
	{
		if( !$this -> valid )
		{
			return;
		}
		
		if( ( ( $this -> id ) == 0 ) && ( !$this -> where_mode ) )
		{
			$SQL = 'INSERT INTO `' . DB_PREFIX . '` (`name`,`descriptionshort`,`description`,`categoryid`,`isthisreal`,`termsagree`,`fileupload`,`active`)';
			$SQL .= ' VALUES(\'' . $this -> slashes( $this -> name ) . '\',\'' . $this -> slashes( $this -> descriptionshort ) . '\',\'' . $this -> slashes( $this -> description ) . '\',\'' . $this -> slashes( $this -> categoryid ) . '\',\'' . $this -> slashes( $this -> isthisreal ) . '\',\'' . $this -> slashes( $this -> termsagree ) . '\',\'' . $this -> slashes( $this -> fileupload ) . '\',\'' . $this -> slashes( $this -> active ) . '\')';
			$retid = mysql_query( $SQL );
			
			if( !$retid )
			{
				echo( mysql_error() );
			}
			
			$this -> id = mysql_insert_id();
			
			if( $this -> enable_undo )
			{
				$this -> write_insert_undo( $this -> id );
			}
		}
		else
		{
			if( $this -> enable_undo )
			{
				$this -> write_update_undo();
			}
			
			$SQL = 'UPDATE `' . DB_PREFIX . '` SET `name`=\'' . $this -> slashes( $this -> name ) . '\',`descriptionshort`=\'' . $this -> slashes( $this -> descriptionshort ) . '\',`description`=\'' . $this -> slashes( $this -> description ) . '\',`categoryid`=\'' . $this -> slashes( $this -> categoryid ) . '\',`isthisreal`=\'' . $this -> slashes( $this -> isthisreal ) . '\',`termsagree`=\'' . $this -> slashes( $this -> termsagree ) . '\',`fileupload`=\'' . $this -> slashes( $this -> fileupload ) . '\',`active`=\'' . $this -> slashes( $this -> active ) . '\'';
			$SQL .= $this -> where_clause;
			$retid = mysql_query( $SQL );
			
			if( !$retid )
			{
				echo( mysql_error() );
			}
		}
	}//end save()
	/**
* @author   - Test Developer
* @type     - public
* @desc     - delete $id from database
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function delete( $id )
	{
		if( empty( $id ) )
		{
			return;
		}
		
		if( stristr( ( string )$id, 'where' ) === FALSE ) $where_clause = 'WHERE `id`=\'' . $id . '\'';
		else
		{
			$where_clause = $id;
		}
		
		if( $this -> enable_undo )
		{
			$this -> write_delete_undo( $where_clause );
		}
		
		;
		$SQL = 'DELETE FROM `' . DB_PREFIX . '` ' . $where_clause;
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			echo( mysql_error() );
		}
	}// end delete()
	/**
* @author   - Test Developer
* @type     - public
* @desc     - write undo into history table
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function write_undo( $item_id, $sql_text )
	{
		if( ( !$this -> enable_undo ) || ( $sql_text == '' ) )
		{
			return;
		}
		
		$sql_text = base64_encode( $sql_text );
		$userid = 0;
		$tablename = DB_PREFIX . '';
		$SQL = 'INSERT INTO `' . DB_PREFIX . "$this->history_table` (`item_id`,`tablename`,`command`,`date`,`userid`,`valid`)";
		$SQL .= ' VALUES(\'' . $item_id . '\',\'' . $tablename . '\',\'' . $sql_text . '\',NOW(),\'' . $userid . '\',\'1\');';
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			echo( mysql_error() );
		}
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - write undo for UPDATE
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function write_update_undo()
	{
		$this -> make_replace_row_sql( $this -> where_clause );
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - write INSERT
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function write_insert_undo( $id )
	{
		$this -> make_sql_for_insert( $id );
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - get SQL query for DELETE
* @return   - string
* @vers     - 1.0
* @Mod  	-
**/
	public function write_delete_undo( $id_or_where_clause )
	{
		$this -> make_replace_row_sql( $id_or_where_clause );
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - get SQL query for INSERT
* @return   - string
* @vers     - 1.0
* @Mod  	-
**/
	public function make_sql_for_insert( $id )
	{
		$SQL = 'SELECT * FROM `' . DB_PREFIX . '` ' . $where_clause;
		$result = '';
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			return '';
		}
		
		$id_value = '';
		
		while( $row = mysql_fetch_assoc( $retid ) )
		{
			$keys = '';
			$values = '';
			
			foreach( $row as $key => $value )
			{
				if( $key == $this -> id_key )
				{
					$id_value = $value;
				}
				
				if( $keys != '' )
				{
					$keys .= ',';
				}
				
				$keys .= '`' . $key . '` ';
				
				if( $values != '' )
				{
					$values .= ',';
				}
				
				$values .= '\'' . $value . '\' ';
			}
		}
		
		$this -> write_undo( $id_value, 'DELETE FROM `' . DB_PREFIX . '` WHERE `id`=\'' . $id . "' AND $this->id_key='$id_value';" );
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - get the SQL query which make the existing rows
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function make_replace_row_sql( $id_or_where_clause )
	{
		if( is_int( $id_or_where_clause ) )
		{
			$where_clause = 'WHERE `id`=\'' . $id_or_where_clause . '\'';
		}
		else
		{
			$where_clause = $id_or_where_clause;
		}
		
		$SQL = 'SELECT * FROM `' . DB_PREFIX . '` ' . $where_clause;
		$result = '';
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			return '';
		}
		
		while( $row = mysql_fetch_assoc( $retid ) )
		{
			$keys = '';
			$values = '';
			$id_value = '';
			
			foreach( $row as $key => $value )
			{
				if( $key == $this -> id_key )
				{
					$id_value = $value;
				}
				
				if( $keys != '' )
				{
					$keys .= ',';
				}
				
				$keys .= '`' . $key . '` ';
				
				if( $values != '' )
				{
					$values .= ',';
				}
				
				$values .= "'{$value}' ";
			}
			
			$this -> write_undo( $id_value, 'REPLACE INTO `' . DB_PREFIX . '` (' . $keys . ') VALUES (' . $values . ');' );
		}
		
		;
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - debugging function which shows what's in history table
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function debug_print_history()
	{
		$SQL = 'SELECT * from `' . DB_PREFIX . "$this->history_table`;";
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			return '';
		}
		
		while( $row = mysql_fetch_assoc( $retid ) )
		{
			foreach( $row as $key => $value )
			{
				if( $key == 'command' )
				{
					$value = base64_decode( $value );
				}
				
				print( "`$key` = '$value'<br>" );
			}
			
			print( '<br />' );
		}
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - do multiple query, each query is separted by ";;\n"
* @return   - string
* @vers     - 1.0
* @Mod  	-
**/
	public function mysql_multiple_query( $q )
	{
		$tok = strtok( $q, ";;\n" );
		
		while( $tok )
		{
			$results = mysql_query( "$tok" );
			$tok = strtok( ";;\n" );
		}
		
		return $results;
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - undo function
* @return   - boolean
* @vers     - 1.0
* @Mod  	-
**/
	public function undo( $item_id )
	{
		$SQL = 'SELECT * from `' . DB_PREFIX . "$this->history_table` WHERE tablename=`" . DB_PREFIX . "` AND valid='1' AND item_id='$item_id'  ORDER BY date DESC LIMIT 1;";
		$retid = mysql_query( $SQL );
		
		if( !$retid )
		{
			return '';
		}
		
		if( $row = mysql_fetch_assoc( $retid ) )
		{
			$command = $row[ 'command' ];
			
			if( $command == '' )
			{
				return false;
			}
			
			$command = base64_decode( $command );
			$SQL = 'DELETE from `' . DB_PREFIX . "$this->history_table` ORDER BY date DESC LIMIT 1;";
			
			if( !mysql_query( $SQL ) )
			{
				return false;
			}
			
			return $this -> mysql_multiple_query( $command );
		}
		
		return false;
	}
	/**
* @author   - Test Developer
* @type     - public
* @desc     - adding slashes if necesary
* @return   - void
* @vers     - 1.0
* @Mod  	-
**/
	public function slashes( $str )
	{
		if( ( get_magic_quotes_gpc() ) && ( !empty( $str ) ) )
		{
			return addslashes( $str );
		}
		else
		{
			return $str;
		}
	}/**************************************************************/
	/*          ADD YOUR CUSTOM FUNCTIONS BELOW                   */
	/**************************************************************/
}// end class TestProduct
?>